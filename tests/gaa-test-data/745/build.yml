name: Release

on:
  push:
    branches:
      - "!*"
    tags:
      - "v*"

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
        - os: macos-latest
          NODE_ARCHITECTURE: x64
          ELECTRON_ARGS: --x64

        - os: ubuntu-latest
          NODE_ARCHITECTURE: x64
          ELECTRON_ARGS: --x64

        - os: windows-latest
          NODE_ARCHITECTURE: x64
          ELECTRON_ARGS: --x64

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: 20
          architecture: ${{matrix.NODE_ARCHITECTURE}}

      - name: Build & Release app
        uses: CryogenicPlanet/action-electron-builder@v2
        with:
          args: ${{matrix.ELECTRON_ARGS}}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
          windows_certs: ${{ secrets.windows_certs }}
          windows_certs_password: ${{ secrets.windows_certs_password }}
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: true
        env:
          NODE_ARCHITECTURE: ${{matrix.NODE_ARCHITECTURE}}
          USE_HARD_LINKS: false
          # macOS notarization envs
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      - name: Archive notorization logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: notorization-logs
          path: notarization-error.log
          if-no-files-found: ignore

