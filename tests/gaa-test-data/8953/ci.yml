name: ci

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request: {}

jobs:
  info:
    runs-on: ubuntu-latest
    outputs:
      has_tag: ${{ steps.get_info.outputs.has_tag }}
      tag: ${{ steps.get_info.outputs.tag }}
    steps:
      - id: get_info
        run: |
          tag="${REF##*/}"
          echo "::set-output name=has_tag::$has_tag"
          echo "::set-output name=tag::$tag"
        env:
          REF: ${{ github.ref }}
          has_tag: ${{ startsWith(github.ref, 'refs/tags/') }}

  test:
    needs: info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - run: ./test/run_test.rb

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/tom-tan/cwl-inspector
          tag-match: v\d+.\d+.\d+
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/tom-tan/cwl-inspector:master
            ${{ steps.docker_meta.outputs.tags }}

  release:
    runs-on: ubuntu-latest
    needs: [info, test, docker]
    if: github.event_name == 'push' && needs.info.outputs.has_tag == 'true'
    steps:
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.info.outputs.tag }}
          release_name: ${{ needs.info.outputs.tag }}
