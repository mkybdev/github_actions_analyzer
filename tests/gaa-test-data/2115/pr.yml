# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Pull Requests

on: [pull_request]

jobs:
  # We build the project but the docker images and run all the tests
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: 'maven'
    - name: Display Maven information
      run: mvn --version
    - name: Build but the docker images
      run: mvn --batch-mode install -Ddocker.skip -DskipTests

  # We run unit tests
  unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - name: Run all the unit tests
        run: mvn --batch-mode install -Ddocker.skip -DskipIntegTests

  # We run integration tests with elastic stack 8 (default)
  it:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: fscrawler-docker-cache-${{ runner.os }}-${{ hashFiles('pom.xml') }}
        continue-on-error: true
      - name: Run the integration tests
        run: mvn --batch-mode install -Ddocker.skip -DskipUnitTests -Dtests.parallelism=1

  # We run integration tests with elastic stack 7
  it-es7:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: fscrawler-docker-cache-${{ runner.os }}-${{ hashFiles('pom.xml') }}
        continue-on-error: true
      - name: Run the integration tests
        run: mvn --batch-mode install -Ddocker.skip -DskipUnitTests -Pes-7x -Dtests.parallelism=1

  # We run integration tests with elastic stack 6
  it-es6:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: fscrawler-docker-cache-${{ runner.os }}-${{ hashFiles('pom.xml') }}
        continue-on-error: true
      - name: Run the integration tests
        run: mvn --batch-mode install -Ddocker.skip -DskipUnitTests -Pes-6x -Dtests.parallelism=1

  # We run this job in parallel after the build
  build-docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: fscrawler-docker-cache-${{ runner.os }}-${{ hashFiles('pom.xml') }}
        continue-on-error: true
      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }}
      - name: Build the docker images
        run: mvn --batch-mode install -DskipTests
