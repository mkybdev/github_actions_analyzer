name: CI

on:
  push:
    branches:
      - dev
      - auto/clang-tidy
  pull_request:
  release:
    types:
      - created

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

  checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: checkout submodules
      shell: bash
      run: |
        sed -i 's,git\@github.com:\([^/]*\)/\(.*\).git,https://github.com/\1/\2,' .gitmodules
        git submodule update --init --recursive
    - name: check submodules
      run: ./source/scripts/check_submodules.sh

  build:
    runs-on: ubuntu-latest

    strategy:
        fail-fast: false
        matrix:
            os: [{docker_image: navitia/debian8_dev, python_version: python3.6}, {docker_image: navitia/debian10_dev, python_version: python3.9}, {docker_image: navitia/debian11_dev, python_version: python3.9}]

    container:
        image: ${{matrix.os.docker_image}}

    services:
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672

      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@v3
      with:
          submodules: 'recursive'
    - name: Restore ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{matrix.os.docker_image}}-ci
        max-size: 2000M
        save: ${{ github.event_name == 'push' }}
    - name: configure for Release
      run: mkdir build && cd ./build && cmake -DSTRIP_SYMBOLS=ON ../source
    - name: run
      working-directory: ./build
      run: make -j $(nproc)
    - name: Tests python2
      working-directory: ./build
      run: |
        pip install virtualenv==20.4.7 -U
        virtualenv -p python2.7 navitia_py2
        . navitia_py2/bin/activate
        pip install -r ../source/jormungandr/requirements_dev.txt
        export JORMUNGANDR_BROKER_URL='amqp://guest:guest@rabbitmq:5672//'
        export KRAKEN_RABBITMQ_HOST='rabbitmq'
        ctest --output-on-failure
    - name: Tests python3
      working-directory: ./build
      run: |
        virtualenv -p ${{matrix.os.python_version}} navitia_py3
        . navitia_py3/bin/activate
        pip install -r ../source/jormungandr/requirements_dev.txt
        export JORMUNGANDR_BROKER_URL='amqp://guest:guest@rabbitmq:5672//'
        export KRAKEN_RABBITMQ_HOST='rabbitmq'
        ctest --output-on-failure
        deactivate
    - name: docker_test python2
      working-directory: ./build
      run: |
        . navitia_py2/bin/activate
        pip install -r ../source/tyr/requirements_dev.txt
        pip install -r ../source/sql/requirements.txt
        export NAVITIA_CHAOS_DUMP_PATH=$(echo $GITHUB_WORKSPACE/source/tests/chaos/chaos_loading.sql.gz | sed -e 's#__w#home/runner/work#')
        echo $NAVITIA_CHAOS_DUMP_PATH
        make docker_test
      env:
        NAVITIA_DOCKER_NETWORK: ${{ job.container.network }}
        TYR_CELERY_BROKER_URL: 'amqp://guest:guest@rabbitmq:5672//'
        TYR_REDIS_HOST: 'redis'
    - name: docker_test python3
      working-directory: ./build
      run: |
        . navitia_py3/bin/activate
        pip install -r ../source/tyr/requirements_dev.txt
        pip install -r ../source/sql/requirements.txt
        export NAVITIA_CHAOS_DUMP_PATH=$(echo $GITHUB_WORKSPACE/source/tests/chaos/chaos_loading.sql.gz | sed -e 's#__w#home/runner/work#')
        echo $NAVITIA_CHAOS_DUMP_PATH
        make docker_test
      env:
        NAVITIA_DOCKER_NETWORK: ${{ job.container.network }}
        TYR_CELERY_BROKER_URL: 'amqp://guest:guest@rabbitmq:5672//'
        TYR_REDIS_HOST: 'redis'
  precommit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: '3.6.x'
    - name: install dependencies
      run: |
        sudo apt update && sudo apt install -y protobuf-compiler clang-format git 2to3
        pip install -r requirements_pre-commit.txt --upgrade
    - name: get submodule
      run: |
        sed -i 's,git\@github.com:\([^/]*\)/\(.*\).git,https://github.com/\1/\2,' .gitmodules
        git submodule update --init --recursive
    - name: Build Protobuf
      run: bash source/scripts/build_protobuf.sh
    - name: Pre-commit Run
      env:
        LC_ALL: C.UTF-8
        LANG: C.UTF-8
      run: |
        pre-commit install --install-hooks
        pre-commit run --all --show-diff-on-failure

  release_script_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v3
      with:
        python-version: '2.7'
    - uses: actions/checkout@v3
    - name: Setup Pipenv and Run tests
      working-directory: release
      env:
        GIT_PYTHON_REFRESH: quiet
      run: |
        pip install virtualenv==20.4.7 -U
        virtualenv -p python2.7 navitia_py2
        . navitia_py2/bin/activate
        pip install -r requirements_release.txt
        pytest
