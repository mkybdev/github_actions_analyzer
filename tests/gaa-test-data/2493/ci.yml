name: Build firmware
# Don't enable CI on push, just on PR. If you
# are working on the main repo and want to trigger
# a CI build submit a draft PR.
on: pull_request

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
        matrix:
          start: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
          count: [10]

    steps:
      - uses: actions/checkout@v2
      - name: Setup environment
        run: |
          # This is the hash of the commit for the PR
          # when the action is triggered by PR, empty otherwise
          COMMIT_ID=${{ github.event.pull_request.head.sha }}
          # This is the hash of the commit when triggered by push
          # but the hash of refs/pull/<n>/merge, which is different
          # from the hash of the latest commit in the PR, that's
          # why we try github.event.pull_request.head.sha first
          COMMIT_ID=${COMMIT_ID:-${{ github.sha }}}
          BUILD_SUFFIX=ci-$(date '+%Y%m%d')-$(git rev-parse --short ${COMMIT_ID})
          echo "::set-env name=TARGETS::$(./src/utils/build-targets.sh -n -s ${{ matrix.start }} -c ${{ matrix.count }})"
          echo "::set-env name=BUILD_SUFFIX::${BUILD_SUFFIX}"
          echo "::set-env name=BUILD_NAME::inav-$(make print_version)-${BUILD_SUFFIX}"
          echo "::set-env name=IS_LAST_JOB::$([ $(expr ${{ strategy.job-index }} + 1) = ${{ strategy.job-total }} ] && echo yes)"
      - name: Ensure all targets will be tested
        if: ${{ env.IS_LAST_JOB }}
        run: |
          UNTESTED=$(./src/utils/build-targets.sh -n -s $(expr ${{ matrix.start }} + ${{ matrix.count }}) -c 10000)
          if ! [ -z "${UNTESTED}" ]; then
            echo "Untested targets: ${UNTESTED}" >&2
            exit 1
          fi
      - uses: actions/cache@v1
        with:
          path: downloads
          key: ${{ runner.os }}-downloads-${{ hashFiles('Makefile') }}-${{ hashFiles('**/make/*.mk')}}
      - name: Install ARM toolchain
        run: make arm_sdk_install
      - name: Build targets (${{ matrix.start }})
        if: ${{ env.TARGETS }}
        run: ./src/utils/build-targets.sh -s ${{ matrix.start }} -c ${{ matrix.count }} -S ${{ env.BUILD_SUFFIX }}
      - name: Upload artifacts
        if: ${{ env.TARGETS }}
        uses: actions/upload-artifact@v2-preview
        with:
          name: ${{ env.BUILD_NAME }}.zip
          path: ./obj/dist/*.hex

  test:
    needs: [build]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: downloads
          key: ${{ runner.os }}-downloads-${{ hashFiles('Makefile') }}-${{ hashFiles('**/make/*.mk')}}
      - name: Install ARM toolchain
        run: make arm_sdk_install
      - name: Run Tests
        run: make test
