name: Create and publish release artifacts
on:
  release:
    types: [ released ]
#See: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#example-using-multiple-events-with-activity-types-or-configuration

defaults:
  run:
    shell: bash

jobs:

  upload_artifacts:
    name: Upload archives
    concurrency: upload
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .github/variables/.env
      - uses: FranzDiebold/github-env-vars-action@v2 #https://github.com/marketplace/actions/github-environment-variables-action
      
      - name: Set build version number env variables
        run: .github/scripts/set_release_version_numbers_env.sh

      - name: Update project version & build number in source code and documentation
        run: .github/scripts/update_project_version.sh

      - name: Setup git config
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Build and publish documentation
        run: |
          pip install mkdocs
          pip install mkdocs-git-revision-date-localized-plugin
          pip install mkdocs-material
          pip install git+https://github.com/jimporter/mike.git
          mike deploy -p -u ${UTPLSQL_VERSION} latest
          mkdocs build --clean -f mkdocs_offline.yml         
          rm -rf docs/* 
          cp -r -v site/* docs
          git add .
          git commit -m "tmp commit of HTML documentation for building a release archive"

      - name: Build release archives
        run: |
          git archive --prefix=utPLSQL/ -o utPLSQL.zip    --format=zip    HEAD
          git archive --prefix=utPLSQL/ -o utPLSQL.tar.gz --format=tar.gz HEAD
          md5sum utPLSQL.zip  --tag > utPLSQL.zip.md5
          md5sum utPLSQL.tar.gz  --tag > utPLSQL.tar.gz.md5

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            utPLSQL.zip
            utPLSQL.zip.md5
            utPLSQL.tar.gz
            utPLSQL.tar.gz.md5

  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs: [ upload_artifacts ]
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          name: 'Github Actions[bot]'
          icon_url: 'https://octodex.github.com/images/mona-the-rivetertocat.png'

