---
name: ci

on:
  push:
    paths:
    - ".github/workflows/ci.yml"
    - lib/**
    - "*.gemspec"
    - spec/**
    - Rakefile
    - Gemfile
    - Gemfile.devtools
    - ".rubocop.yml"
    - project.yml
  pull_request:
    branches:
    - main
  create:

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        ruby:
        - '3.3'
        - '3.2'
        - '3.1'
        - '3.0'
        # TODO: re-add both as a separate workflow because it's just too slow
        # - jruby
        # - truffleruby
        group: [rom, compat]
        include:
        - ruby: '3.3'
          coverage: 'false'
          use_dry_transformer_main: 'true'
          use_rom_sql_main: 'true'
    env:
      COVERAGE: "${{matrix.coverage}}"
      COVERAGE_TOKEN: "${{secrets.CODACY_PROJECT_TOKEN}}"
      BASE_DB_URI: localhost/rom_repository
      USE_DRY_TRANSFORMER_MAIN: "${{matrix.use_dry_transformer_main}}"
      USE_ROM_SQL_MAIN: "${{matrix.use_rom_sql_main}}"
      CODACY_RUN_LOCAL: "${{matrix.coverage}}"
      CODACY_PROJECT_TOKEN: "${{secrets.CODACY_PROJECT_TOKEN}}"
      APT_DEPS: libpq-dev libsqlite3-dev
      SPEC_GROUP: "${{matrix.group}}"
    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: ''
          POSTGRES_DB: rom_repository
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
        - 5432:5432
        options: "--health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install package dependencies
      run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{matrix.ruby}}"
        bundler-cache: true
    - name: Run tests
      run: bundle exec rake spec:$SPEC_GROUP
    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      if: env.COVERAGE == 'true' && env.COVERAGE_TOKEN != ''
      with:
        project-token: "${{secrets.CODACY_PROJECT_TOKEN}}"
        coverage-reports: coverage/coverage.xml
