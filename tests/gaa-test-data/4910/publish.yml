
name: Publish to PyPI

on:
  release:
    types:
      - published

jobs:

  pypi-build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    - name: Get tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      shell: bash

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip wheel setuptools setuptools_scm build twine
      shell: bash

    - name: Build binary wheel
      run: python -m build --sdist --wheel . --outdir dist

    - name: CheckFiles
      run: |
        ls dist
      shell: bash

    - name: Test wheels
      run: |
        cd dist && python -m pip install gutils*.whl
        python -m twine check *
      shell: bash

    - name: Publish a Python distribution to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}

  docker-build:
    name: Build and test Docker Image
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ${ BUILDX_CACHE }
        key: ${ CACHE_KEY }${{ github.sha }}
        restore-keys: |
          ${ CACHE_KEY }

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      #continue-on-error: true
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build release
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: docker/build-push-action@v2
      with:
        push: false
        tags: axiom/gutils:${{ github.event.release.tag_name }}
        cache-from: type=local,src=${ BUILDX_CACHE }
        cache-to: type=local,dest=${ BUILDX_CACHE }
        outputs: type=docker

    - name: Run tests from the Docker image
      run: docker run axiom/gutils:${{ github.event.release.tag_name }} pytest -m "not long and not watch"

  docker-push:
    name: Push tagged image to Docker Hub
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: docker-build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ${ BUILDX_CACHE }
        key: ${ CACHE_KEY }${{ github.sha }}
        restore-keys: |
          ${ CACHE_KEY }

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push tagged image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: axiom/gutils:${{ github.event.release.tag_name }}
        cache-from: type=local,src=${ BUILDX_CACHE }
        cache-to: type=local,dest=${ BUILDX_CACHE }
