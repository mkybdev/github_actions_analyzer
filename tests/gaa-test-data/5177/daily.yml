name: Daily

on:
  pull_request:
    branches:
      # any PR to a release branch.
      - '[0-9].[0-9]'
      - 'ror-[0-9].[0-9].[0-9]'
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:
    inputs:
      use_repo:
        description: 'repo owner and name'
        default: 'ctripcorp/xredis'
      use_git_ref:
        description: 'git branch or sha to use'
        default: 'xredis_2_ror'

jobs:

  test-ubuntu-jemalloc:
    runs-on: ubuntu-22.04
    if: github.repository == 'ctripcorp/xredis'
    timeout-minutes: 14400
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        echo "::set-output name=sha::$(cd deps/rocksdb && git rev-parse HEAD)"
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ steps.rocksdb-sha.outputs.sha }}
    - name: make
      run: |
        sudo apt-get update
        sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
        make REDIS_CFLAGS='-Werror -DREDIS_TEST' -j8
    - name: test
      run: |
        sudo apt-get install tcl8.6
        ./runtest --swap-mode disk --accurate --verbose --dump-logs
    - name: unittest
      run: ./src/redis-server test all

  test-ubuntu-libc-malloc:
    runs-on: ubuntu-22.04
    if: github.repository == 'ctripcorp/xredis'
    timeout-minutes: 14400
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        echo "::set-output name=sha::$(cd deps/rocksdb && git rev-parse HEAD)"
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ steps.rocksdb-sha.outputs.sha }}
    - name: make
      run: |
        sudo apt-get update
        sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
        make MALLOC=libc -j8
    - name: test
      run: |
        sudo apt-get install tcl8.6
        ./runtest --swap-mode disk --accurate --verbose --dump-logs

  test-sanitizer-address:
    runs-on: ubuntu-22.04
    if: github.repository == 'ctripcorp/xredis'
    timeout-minutes: 14400
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        echo "::set-output name=sha::$(cd deps/rocksdb && git rev-parse HEAD)"
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ steps.rocksdb-sha.outputs.sha }}
    - name: make
      run: |
        sudo apt-get update
        sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
        make SANITIZER=address REDIS_CFLAGS='-DREDIS_TEST' -j8
    - name: test
      run: |
        sudo apt-get install tcl8.6 tclx -y
        ./runtest --swap-mode disk --accurate --verbose --dump-logs
    - name: unittest
      run: ./src/redis-server test all

  test-sanitizer-undefined:
    runs-on: ubuntu-22.04
    if: github.repository == 'ctripcorp/xredis'
    timeout-minutes: 14400
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        echo "::set-output name=sha::$(cd deps/rocksdb && git rev-parse HEAD)"
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ steps.rocksdb-sha.outputs.sha }}
    - name: make
      run: |
        sudo apt-get update
        sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
        make SANITIZER=undefined REDIS_CFLAGS='-DREDIS_TEST' -j8
    - name: test
      run: |
        sudo apt-get install tcl8.6 tclx -y
        ./runtest --swap-mode disk --accurate --verbose --dump-logs
    - name: unittest
      run: ./src/redis-server test all

  test-ubuntu-io-threads:
    runs-on: ubuntu-22.04
    if: github.repository == 'ctripcorp/xredis'
    timeout-minutes: 14400
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        echo "::set-output name=sha::$(cd deps/rocksdb && git rev-parse HEAD)"
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ steps.rocksdb-sha.outputs.sha }}
    - name: make
      run: |
        sudo apt-get update
        sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
        make -j8
    - name: test
      run: |
        sudo apt-get install tcl8.6 tcl-tls
        ./runtest --swap-mode disk --config io-threads 4 --config io-threads-do-reads yes --accurate --verbose --tags network --dump-logs

  test-valgrind:
    runs-on: ubuntu-22.04
    if: github.repository == 'ctripcorp/xredis'
    timeout-minutes: 14400
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: get rocksdb sha
      id: rocksdb-sha
      run: |
        echo "::set-output name=sha::$(cd deps/rocksdb && git rev-parse HEAD)"
      shell: bash
    - name: cache rocksdb
      id: cache-rocksdb
      uses: actions/cache@v3
      with:
        path: deps/rocksdb
        key: ${{ runner.os }}-rocksdb-${{ steps.rocksdb-sha.outputs.sha }}
    - name: make
      run: |
        sudo apt-get update
        sudo apt-get -y install libsnappy-dev zlib1g-dev libstdc++6
        make valgrind REDIS_CFLAGS='-DREDIS_TEST' -j8
    - name: test
      run: |
        sudo apt-get install tcl8.6 valgrind -y
        ./runtest --swap-mode disk --valgrind --verbose --clients 1 --tags -large-memory --dump-logs
    - name: unittest
      run: |
        valgrind --track-origins=yes --suppressions=./src/valgrind.sup --show-reachable=no --show-possibly-lost=no --leak-check=full --log-file=err.txt ./src/redis-server test all
        if grep -q 0x err.txt; then cat err.txt; exit 1; fi

