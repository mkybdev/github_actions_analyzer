name: Run sanitizer checks

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - '**.h'
      - '**.c'

  pull_request:
    branches: [ master ]
    paths:
      - '**.h'
      - '**.c'

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build with ${{ matrix.sanitizer }} sanitizer for ${{ matrix.ucs }}
    strategy:
      matrix:
        ucs: [ucs2, ucs4]
        sanitizer: [address, leak, undefined]
        include:
          - sanitizer: "address"
            options: "ASAN_OPTIONS=detect_leaks=0"
          - sanitizer: "leak"
            options: "LSAN_OPTIONS=fast_unwind_on_malloc=0"
          - sanitizer: "undefined"
            options: "UBSAN_OPTIONS=halt_on_error=1"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Install dependencies
        run: sudo apt-get update -qq && sudo apt-get install -y libyaml-dev
      - name: Autogen
        run: ./autogen.sh
      - name: Configure
        run: CFLAGS="-fsanitize=${{ matrix.sanitizer }} -g" ./configure
        if: matrix.ucs == 'ucs2'
      - name: Configure with ucs4
        run: CFLAGS="-fsanitize=${{ matrix.sanitizer }} -g" ./configure --enable-ucs4
        if: matrix.ucs == 'ucs4'
      - name: Make check
        run: ${{ matrix.options }} make check
      - name: Store the test suite log
        if: ${{ always() }} # store the test suite log even if the tests failed
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: test-suite-${{ matrix.ucs }}-${{ matrix.sanitizer }}.log
          path: tests/test-suite.log
